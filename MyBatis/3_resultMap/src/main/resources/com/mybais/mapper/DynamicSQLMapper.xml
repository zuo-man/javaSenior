<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybais.mapper.DynamicSQLMapper">
    
    <!-- 设置SQL标签片段 -->
    <sql id="empColums">eid, emp_name, age, sex, email</sql>

    <!-- 动态SQL -->
    <!--  List<Emp> getEmpByCondition(Emp emp); -->
    <select id="getEmpByCondition" resultType="Emp">
        select <include refid="empColums"></include> from t_emp
        <trim prefix="where" suffixOverrides="and|or">
            <if test="empName != null and empName != '' ">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != '' ">
                age = #{age} or
            </if>
            <if test="sex != null and sex != '' ">
                sex = #{sex} and
            </if>
            <if test="email != null and email != '' ">
                email = #{email}
            </if>
        </trim>
    </select>
    <select id="getEmpByCondition_TWO" resultType="Emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName != '' ">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != '' ">
                age = #{age} and
            </if>
            <if test="sex != null and sex != '' ">
                sex = #{sex} and
            </if>
            <if test="email != null and email != '' ">
                email = #{email}
            </if>
        </where>
    </select>
    <select id="getEmpByCondition_ONE" resultType="Emp">
        select * from t_emp where 1=1
        <if test="empName != null and empName != '' ">
            emp_name = #{empName}
        </if>
        <if test="age != null and age != '' ">
            age = #{age}
        </if>
        <if test="sex != null and sex != '' ">
            sex = #{sex}
        </if>
        <if test="email != null and email != '' ">
            email = #{email}
        </if>
    </select>


    <!-- 测试choose、when、otherwise -->
    <!-- List<Emp> getEmpByChoose(Emp emp); -->
    <select id="getEmpByChoose" resultType="Emp">
        select * from t_emp
        <where>
            <choose>
                <when test="empName != null and empName!= '' ">
                    emp_name = #{empName}
                </when>
                <when test="age != null and age!= '' ">
                    age = #{age}
                </when>
                <when test="sex != null and sex!= '' ">
                    sex = #{sex}
                </when>
                <when test="email != null and email!= '' ">
                    email = #{email}
                </when>
                <otherwise>
                    did = 1
                </otherwise>
            </choose>
        </where>
    </select>


    <!-- 通过数组实现批量删除 -->
    <!-- int deleteMoreByArr(@Param("eids")Integer[] eids); -->
    <delete id="deleteMoreByArr">
        delete from t_emp where
        <foreach collection="eids" item="eid" separator="or">
            eid = #{eid}
        </foreach>
        <!--
            delete from t_emp where eid in
            <foreach collection="eids" item="eid" separator="," open="(" close=")">
                #{eid}
            </foreach>
        -->
    </delete>


    <!-- 通过List集合实现批量添加 -->
    <!-- int insertMoreByList(List<Emp> emps); -->
    <!--
            collection：设置需要循环的数组或集合
            item：表示数组或集合中的每一个数据
            separator：循环体之间的分隔符
            open：foreach标签所循环的所有内容的开始符
            close：foreach标签所循环的所有内容的结束符         -->
    <insert id="insertMoreByList">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            ( null, #{emp.empName}, #{emp.age}, #{emp.sex}, #{emp.email}, null )
        </foreach>
    </insert>



</mapper>
