package com.OO2.java;

/*
 * 字类对象实例化的全过程
 * 
 * 	1.结果上看（继承性）
 * 		字类继承父类以后，就获取了父类中声明的属性和方法
 * 		创建字类的对象，在堆空间中，就会加载所有父类中声明的属性
 * 
 * 	2.过程上看：
 * 		当通过字类的构造器创建字类对象时，一定会直接或间接的调用其父类的构造器，进而调用父类的父类构造器，直到
 * 		调用了java.lang.Object类中空参的构造器为止，正因为加载过所有的父类的结构，所以才可以看到内层中有
 * 		父类中的结构，字类对象才可以考虑进行调用
 * 
 * 	明确：虽然创建字类对象时，调用了父类的构造器，但是自始至终就创建过一个对象，即为new的字类对象
 * 
 * 
 * 	重载与重写：
 *	重载：不表现为多态性
 *	重写：表现为多态性
 *	如果它不是晚绑定，它就不是多态
 * 
 */


public class InstanceTest {

}
