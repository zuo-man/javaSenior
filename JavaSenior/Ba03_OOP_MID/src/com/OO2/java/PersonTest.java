package com.OO2.java;

/*
 * 方法的重写（override/overwrite）
 * 
 * 	1.重写：字类继承父类以后，可以对父类中同名同参数的方法，进行覆盖操作
 * 	2.重写以后，当创建字类对象以后，通过字类对象调用父类中的同名同参数方法时，实际执行的是字类重写父类的方法。
 * 
 * 	3.规定：
 * 		方法的声明：权限修饰符    返回值类型     方法名（形参列表） throws 异常的类型{
 * 						//方法体
 * 				}
 * 				字类中的叫：重写的方法。	父类中的叫：被重写的方法
 * 				①两者方法名和形参列表必须相同
 * 			 	②字类重写的方法权限修饰符应不小于父类被重写的方法权限修饰符（可以相同）
 * 					>特殊的：字类不能重写父类中声明为private权限的方法
 * 				③返回值类型：
 * 					>父类被重写的方法返回值类型是void，则字类重写的方法的返回值类型只能是void
 * 					>父类被重写的方法返回值类型是A类型，则字类重写的方法的返回值可以是A类或A类的字类
 * 					>父类被重写的方法返回值类型是基本数据类型（比如boolean），则字类重写的方法的返回值必须是相同的基本数据类型（也必须是boolean）
 * 				④字类重写的方法抛出的异常类型不大于父类被重写的方法抛出的异常
 * 	4.字类和父类中同名同参数的方法要么都声明为非static的（考虑重写），要么都声明为static（不是重写）
 * 
 */

public class PersonTest {

	public static void main(String[] args) {
		
		Student s = new Student("计算机");
		
		s.walk(10);		
		s.study();		
				
		
		
		Person p1 = new Person();
		p1.eat();
		
		
		
	}	
}
